; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /home/thor/fun/euler-rs-py/clojure-euler; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; nREPL Connection was closed
; Using host:port 127.0.0.1:42339 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉clojure-euler.core꞉> 
; Jack-in done.
clj꞉clojure-euler.core꞉> (cons)
#function[clojure.core/cons--5441]
clj꞉clojure-euler.core꞉> 
(help cons)
; Syntax error compiling at (.calva/output-window/output.calva-repl:19:1).
; Unable to resolve symbol: help in this context
clj꞉clojure-euler.core꞉> (doc cons)
; -------------------------
; clojure.core/cons
; ([x seq])
;   Returns a new seq where x is the first element and seq is
;     the rest.
nil
clj꞉clojure-euler.core꞉> (doc euler-1)
nil
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-1
clj꞉clojure-euler.core꞉> (doc euler-1)
; -------------------------
; clojure-euler.core/euler-1
; ([n])
;   Find the sum of all the multiples of 3 or 5 below n.
nil
clj꞉clojure-euler.core꞉> (cons 1 [2 3])
(1 2 3)
clj꞉clojure-euler.core꞉> (cons 1 [2])
[2]
clj꞉clojure-euler.core꞉> (cons 1 2)
(1 . 2)
; Syntax error compiling at (.calva/output-window/output.calva-repl:44:1).
; Unable to resolve symbol: . in this context
clj꞉clojure-euler.core꞉> (cons 1 '(2))
(1 2)
clj꞉clojure-euler.core꞉> (cons 1 '[2])
(1 2)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-2a
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-2a
clj꞉clojure-euler.core꞉> 
10
clj꞉clojure-euler.core꞉> 
2
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-j
clj꞉clojure-euler.core꞉> (euler-3 2)
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /home/thor/fun/euler-rs-py/clojure-euler; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:45039 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉clojure-euler.core꞉> 
; Jack-in done.
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:1:8650).
; Unable to resolve symbol: divides in this context
clj꞉clojure-euler.core꞉> 
; Syntax error (UnsupportedOperationException) compiling recur at (src/clojure_euler/core.clj:37:7).
; Can only recur from tail position
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3
clj꞉clojure-euler.core꞉> 
5
clj꞉clojure-euler.core꞉> 
; 2 divides 6
3
clj꞉clojure-euler.core꞉> 
; 2 divides 8
; 2 divides 4
; 2 divides 2
2
clj꞉clojure-euler.core꞉> 
2
clj꞉clojure-euler.core꞉> 
2 divides 2
2 divides 4
2 divides 2
2 divides 6
2 divides 8
2 divides 4
2 divides 2
(2 3 2 5 3 7 2 9)
clj꞉clojure-euler.core꞉> 
2 divides 2
2 divides 4
2 divides 2
2 divides 6
2 divides 8
2 divides 4
2 divides 2
2 divides 10
2 divides 12
2 divides 6
2 divides 14
2 divides 16
2 divides 8
2 divides 4
2 divides 2
2 divides 18
2 divides 20
2 divides 10
2 divides 22
2 divides 24
2 divides 12
2 divides 6
2 divides 26
2 divides 28
2 divides 14
2 divides 30
2 divides 32
2 divides 16
2 divides 8
2 divides 4
2 divides 2
(2 3 2 5 3 7 2 9 5 11 3 13 7 5 2 17 9 19 5 7 11 23 3 25 13 9 7 29 5 31 2 112 divides 34
2 divides 36
2 divides 18
2 divides 38
2 divides 40
2 divides 20
2 divides 10
2 divides 42
2 divides 44
2 divides 22
2 divides 46
2 divides 48
2 divides 24
2 divides 12
2 divides 6
2 divides 50
2 divides 52
2 divides 26
2 divides 54
2 divides 56
2 divides 28
2 divides 14
2 divides 58
2 divides 60
2 divides 30
2 divides 62
2 divides 64
2 divides 32
2 divides 16
2 divides 8
2 divides 4
2 divides 2
 17 7 9 37 19 13 5 41 7 43 11 5 23 47 3 49 25 17 ...)
clj꞉clojure-euler.core꞉> 
2 divides 2
2 divides 4
2 divides 2
2 divides 6
2 divides 8
2 divides 4
2 divides 2
2 divides 10
2 divides 12
2 divides 6
2 divides 14
2 divides 16
2 divides 8
2 divides 4
2 divides 2
2 divides 18
2 divides 20
2 divides 10
2 divides 22
2 divides 24
2 divides 12
2 divides 6
2 divides 26
2 divides 28
2 divides 14
2 divides 30
2 divides 32
2 divides 16
2 divides 8
2 divides 4
2 divides 2
(2 3 2 5 3 7 2 9 5 11 3 13 7 5 2 17 9 19 5 7 11 23 3 25 13 9 7 29 5 31 2 112 divides 34
2 divides 36
2 divides 18
2 divides 38
2 divides 40
2 divides 20
2 divides 10
2 divides 42
2 divides 44
2 divides 22
2 divides 46
2 divides 48
2 divides 24
2 divides 12
2 divides 6
2 divides 50
2 divides 52
2 divides 26
2 divides 54
2 divides 56
2 divides 28
2 divides 14
2 divides 58
2 divides 60
2 divides 30
2 divides 62
2 divides 64
2 divides 32
2 divides 16
2 divides 8
2 divides 4
2 divides 2
 17 7 9 37 19 13 5 41 7 43 11 5 23 47 3 49 25 17 ...)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3
clj꞉clojure-euler.core꞉> 
(2
 3
 2
 5
 3
 7
 2
 9
 5
 11
 3
 13
 7
 5
 2
 17
 9
 19
 5
 7
 11
 23
 3
 25
 13
 9
 7
 29
 5
 31
 2
 11
 17
 7
 9
 37
 19
 13
 5
 41
 7
 43
 11
 5
 23
 47
 3
 49
 25
 17
 ...)
clj꞉clojure-euler.core꞉> 
(2
 3
 2
 5
 3
 7
 2
 9
 5
 11
 3
 13
 7
 5
 2
 17
 9
 19
 5
 7
 11
 23
 3
 25
 13
 9
 7
 29
 5
 31
 2
 11
 17
 7
 9
 37
 19
 13
 5
 41
 7
 43
 11
 5
 23
 47
 3
 49
 25
 17
 ...)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3
clj꞉clojure-euler.core꞉> 
(2 1 2 1 2 1 2 3 2 1 2 1 2 3 2 1 3 1 2 3 2 1 2 5 2 3 2 1 3 1 2 3 2 5 3 1 2 3 2 1 3 1 2 3 2 1 2 7 5 3 ...)
clj꞉clojure-euler.core꞉> 
(2 1 2 1 2 1 2 3 2 1 2 1 2 3 2 1 3 1 2 3 2 1 2 5 2 3 2 1 3 1 2 3 2 5 3 1 2 3 2 1 3 1 2 3 2 1 2 7 5 3 ...)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3
clj꞉clojure-euler.core꞉> 
(2 3 2 5 3 7 2 3)
clj꞉clojure-euler.core꞉> 
(2 3 2 5 3 7 2 3 5 11 3 13 7 5 2 17 3 19)
clj꞉clojure-euler.core꞉> 
(2
 3
 2
 5
 3
 7
 2
 3
 5
 11
 3
 13
 7
 5
 2
 17
 3
 19
 5
 7
 11
 23
 3
 5
 13
 3
 7
 29
 5
 31
 2
 11
 17
 7
 3
 37
 19
 13
 5
 41
 7
 43
 11
 5
 23
 47
 3
 7
 5
 17
 ...)
clj꞉clojure-euler.core꞉> 
; 4613732
nil
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/-main
clj꞉clojure-euler.core꞉> 
6857
clj꞉clojure-euler.core꞉> 
; 6857
nil
clj꞉clojure-euler.core꞉> 
(main)
; Syntax error compiling at (.calva/output-window/output.calva-repl:417:1).
; Unable to resolve symbol: main in this context
clj꞉clojure-euler.core꞉> 
(-main)
; 233168
; 4613732
; 4613732
nil
clj꞉clojure-euler.core꞉> 
; 6857
nil
clj꞉clojure-euler.core꞉> 
6857
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/-main
clj꞉clojure-euler.core꞉> 
(-main)
; 233168
; 4613732
; 4613732
6857
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/-main
clj꞉clojure-euler.core꞉> 
6857
clj꞉clojure-euler.core꞉> 
(-main)
; 233168
; 4613732
; 4613732
; 6857
nil
clj꞉clojure-euler.core꞉> 
(2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19)
clj꞉clojure-euler.core꞉> 
; Execution error (IllegalArgumentException) at clojure-euler.core/eval10636 (form-init6829885656677589544.clj:47).
; Don't know how to create ISeq from: java.lang.Long
clj꞉clojure-euler.core꞉> 
(\a \b \c)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3-refactor
clj꞉clojure-euler.core꞉> 
(1 3 1 5 3 7 1 3 5 11 3 13 7 5 1 17 3 19)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-3-refactor
clj꞉clojure-euler.core꞉> 
(2 3 2 5 3 7 2 3 5 11 3 13 7 5 2 17 3 19)
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/-main
clj꞉clojure-euler.core꞉> 
(-main)
; 233168
; 4613732
; 4613732
; 6857
nil
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:69:12).
; Unable to resolve symbol: euler-4 in this context
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:69:12).
; Unable to resolve symbol: euler-4 in this context
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:69:12).
; Unable to resolve symbol: euler-4 in this context
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:64:1).
; Unable to resolve symbol: euler-4 in this context
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:61:11).
; Unable to resolve symbol: palindrome? in this context
clj꞉clojure-euler.core꞉> 
nil
clj꞉clojure-euler.core꞉> 
(10000
 10100
 10200
 10300
 10400
 10500
 10600
 10700
 10800
 10900
 11000
 11100
 11200
 11300
 11400
 11500
 11600
 11700
 11800
 11900
 12000
 12100
 12200
 12300
 12400
 12500
 12600
 12700
 12800
 12900
 13000
 13100
 13200
 13300
 13400
 13500
 13600
 13700
 13800
 13900
 14000
 14100
 14200
 14300
 14400
 14500
 14600
 14700
 14800
 14900
 ...)
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:62:16).
; Unable to resolve symbol: palindrome? in this context
clj꞉clojure-euler.core꞉> (defn palindrome? [n] (= (seq (str n)) (reverse (str n))))
; Syntax error compiling at (.calva/output-window/output.calva-repl:546:56).
; Unable to resolve symbol: n in this context
clj꞉clojure-euler.core꞉> #'clojure-euler.core/euler-4
clj꞉clojure-euler.core꞉> 
906609
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-4
clj꞉clojure-euler.core꞉> 
; Syntax error compiling at (src/clojure_euler/core.clj:76:1).
; Unable to resolve symbol: euler-4 in this context
clj꞉user꞉> 
906609
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-4
clj꞉clojure-euler.core꞉> 
906609
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/-main
clj꞉clojure-euler.core꞉> 
; 906609
nil
clj꞉clojure-euler.core꞉> 
#'clojure-euler.core/euler-4
clj꞉clojure-euler.core꞉> 
906609
clj꞉clojure-euler.core꞉> 
(-main)
; 233168
; 4613732
; 4613732
; 6857
; 906609
nil
clj꞉clojure-euler.core꞉> 
; nREPL Connection was closed
